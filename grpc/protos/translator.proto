// Copyright 2017, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

option java_multiple_files = true;
option java_outer_classname = "TranslatorProto";

package srecon;

// The Translation Service definition.
service Translator {
  // Takes a message and the locale to translate it to.
  rpc Translate (TranslationRequest) returns (TranslationReply) {}

  // Streaming service which takes messages and the locales to translate it to.
  rpc AllTranslations (AllTranslationsRequest)
      returns (stream AllTranslationsReply) {}
}

// The single translation request and reply.
message TranslationRequest {
  string message = 1;
  string locale = 2;
}

message TranslationReply {
  string translation = 1;
}

// The stream request and reply.
message AllTranslationsRequest {
  // If set, return translations for only this message. If unset, return all.
  string message = 1;

  // If set, return those; if unset, return all. Substrings match, e.g. "en_"
  // for all English variants, or "_CH" for all languages used in Switzerland.
  repeated string locales = 2;
}

message AllTranslationsReply {
  string message = 1;
  string locale = 2;
  string translation = 3;
}
