// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace srecon {
class JitterDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Jitter>
     _instance;
} _Jitter_default_instance_;
class BehaviourDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Behaviour>
     _instance;
} _Behaviour_default_instance_;
class BehaviourDefinitionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviourDefinition>
     _instance;
} _BehaviourDefinition_default_instance_;
class BehaviourReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviourReply>
     _instance;
} _BehaviourReply_default_instance_;

namespace protobuf_control_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Jitter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Jitter, mean_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Jitter, stddev_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Behaviour, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Behaviour, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Behaviour, jitter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviourDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviourDefinition, unary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviourDefinition, stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviourReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Jitter)},
  { 7, -1, sizeof(Behaviour)},
  { 14, -1, sizeof(BehaviourDefinition)},
  { 21, -1, sizeof(BehaviourReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Jitter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Behaviour_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviourDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviourReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "control.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Jitter_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Jitter_default_instance_);_Behaviour_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Behaviour_default_instance_);_BehaviourDefinition_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviourDefinition_default_instance_);_BehaviourReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviourReply_default_instance_);_Behaviour_default_instance_._instance.get_mutable()->jitter_ = const_cast< ::srecon::Jitter*>(
      ::srecon::Jitter::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rcontrol.proto\022\006srecon\",\n\006Jitter\022\017\n\007mea"
      "n_ms\030\001 \001(\005\022\021\n\tstddev_ms\030\002 \001(\005\"O\n\tBehavio"
      "ur\022\"\n\006result\030\001 \001(\0162\022.srecon.ResultType\022\036"
      "\n\006jitter\030\002 \001(\0132\016.srecon.Jitter\"Z\n\023Behavi"
      "ourDefinition\022 \n\005unary\030\001 \003(\0132\021.srecon.Be"
      "haviour\022!\n\006stream\030\002 \003(\0132\021.srecon.Behavio"
      "ur\"\020\n\016BehaviourReply*}\n\nResultType\022\006\n\002OK"
      "\020\000\022\013\n\007UNKNOWN\020\002\022\025\n\021DEADLINE_EXCEEDED\020\004\022\r"
      "\n\tNOT_FOUND\020\005\022\026\n\022RESOURCE_EXHAUSTED\020\010\022\013\n"
      "\007ABORTED\020\n\022\017\n\013UNAVAILABLE\020\0162Z\n\021Translato"
      "rControl\022E\n\014SetBehaviour\022\033.srecon.Behavi"
      "ourDefinition\032\026.srecon.BehaviourReply\"\000B"
      "\020B\014ControlProtoP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 505);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "control.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_control_2eproto

const ::google::protobuf::EnumDescriptor* ResultType_descriptor() {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_enum_descriptors[0];
}
bool ResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 4:
    case 5:
    case 8:
    case 10:
    case 14:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jitter::kMeanMsFieldNumber;
const int Jitter::kStddevMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jitter::Jitter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_control_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:srecon.Jitter)
}
Jitter::Jitter(const Jitter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mean_ms_, &from.mean_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&stddev_ms_) -
    reinterpret_cast<char*>(&mean_ms_)) + sizeof(stddev_ms_));
  // @@protoc_insertion_point(copy_constructor:srecon.Jitter)
}

void Jitter::SharedCtor() {
  ::memset(&mean_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stddev_ms_) -
      reinterpret_cast<char*>(&mean_ms_)) + sizeof(stddev_ms_));
  _cached_size_ = 0;
}

Jitter::~Jitter() {
  // @@protoc_insertion_point(destructor:srecon.Jitter)
  SharedDtor();
}

void Jitter::SharedDtor() {
}

void Jitter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Jitter::descriptor() {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Jitter& Jitter::default_instance() {
  protobuf_control_2eproto::InitDefaults();
  return *internal_default_instance();
}

Jitter* Jitter::New(::google::protobuf::Arena* arena) const {
  Jitter* n = new Jitter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Jitter::Clear() {
// @@protoc_insertion_point(message_clear_start:srecon.Jitter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mean_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stddev_ms_) -
      reinterpret_cast<char*>(&mean_ms_)) + sizeof(stddev_ms_));
  _internal_metadata_.Clear();
}

bool Jitter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:srecon.Jitter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mean_ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mean_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stddev_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stddev_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:srecon.Jitter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:srecon.Jitter)
  return false;
#undef DO_
}

void Jitter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:srecon.Jitter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mean_ms = 1;
  if (this->mean_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mean_ms(), output);
  }

  // int32 stddev_ms = 2;
  if (this->stddev_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stddev_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:srecon.Jitter)
}

::google::protobuf::uint8* Jitter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:srecon.Jitter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mean_ms = 1;
  if (this->mean_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mean_ms(), target);
  }

  // int32 stddev_ms = 2;
  if (this->stddev_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stddev_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srecon.Jitter)
  return target;
}

size_t Jitter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srecon.Jitter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 mean_ms = 1;
  if (this->mean_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mean_ms());
  }

  // int32 stddev_ms = 2;
  if (this->stddev_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stddev_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Jitter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srecon.Jitter)
  GOOGLE_DCHECK_NE(&from, this);
  const Jitter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Jitter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srecon.Jitter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srecon.Jitter)
    MergeFrom(*source);
  }
}

void Jitter::MergeFrom(const Jitter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srecon.Jitter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mean_ms() != 0) {
    set_mean_ms(from.mean_ms());
  }
  if (from.stddev_ms() != 0) {
    set_stddev_ms(from.stddev_ms());
  }
}

void Jitter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srecon.Jitter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jitter::CopyFrom(const Jitter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srecon.Jitter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jitter::IsInitialized() const {
  return true;
}

void Jitter::Swap(Jitter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jitter::InternalSwap(Jitter* other) {
  using std::swap;
  swap(mean_ms_, other->mean_ms_);
  swap(stddev_ms_, other->stddev_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Jitter::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Jitter

// int32 mean_ms = 1;
void Jitter::clear_mean_ms() {
  mean_ms_ = 0;
}
::google::protobuf::int32 Jitter::mean_ms() const {
  // @@protoc_insertion_point(field_get:srecon.Jitter.mean_ms)
  return mean_ms_;
}
void Jitter::set_mean_ms(::google::protobuf::int32 value) {
  
  mean_ms_ = value;
  // @@protoc_insertion_point(field_set:srecon.Jitter.mean_ms)
}

// int32 stddev_ms = 2;
void Jitter::clear_stddev_ms() {
  stddev_ms_ = 0;
}
::google::protobuf::int32 Jitter::stddev_ms() const {
  // @@protoc_insertion_point(field_get:srecon.Jitter.stddev_ms)
  return stddev_ms_;
}
void Jitter::set_stddev_ms(::google::protobuf::int32 value) {
  
  stddev_ms_ = value;
  // @@protoc_insertion_point(field_set:srecon.Jitter.stddev_ms)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Behaviour::kResultFieldNumber;
const int Behaviour::kJitterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Behaviour::Behaviour()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_control_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:srecon.Behaviour)
}
Behaviour::Behaviour(const Behaviour& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_jitter()) {
    jitter_ = new ::srecon::Jitter(*from.jitter_);
  } else {
    jitter_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:srecon.Behaviour)
}

void Behaviour::SharedCtor() {
  ::memset(&jitter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&jitter_)) + sizeof(result_));
  _cached_size_ = 0;
}

Behaviour::~Behaviour() {
  // @@protoc_insertion_point(destructor:srecon.Behaviour)
  SharedDtor();
}

void Behaviour::SharedDtor() {
  if (this != internal_default_instance()) delete jitter_;
}

void Behaviour::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Behaviour::descriptor() {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Behaviour& Behaviour::default_instance() {
  protobuf_control_2eproto::InitDefaults();
  return *internal_default_instance();
}

Behaviour* Behaviour::New(::google::protobuf::Arena* arena) const {
  Behaviour* n = new Behaviour;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Behaviour::Clear() {
// @@protoc_insertion_point(message_clear_start:srecon.Behaviour)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && jitter_ != NULL) {
    delete jitter_;
  }
  jitter_ = NULL;
  result_ = 0;
  _internal_metadata_.Clear();
}

bool Behaviour::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:srecon.Behaviour)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .srecon.ResultType result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::srecon::ResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .srecon.Jitter jitter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_jitter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:srecon.Behaviour)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:srecon.Behaviour)
  return false;
#undef DO_
}

void Behaviour::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:srecon.Behaviour)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .srecon.ResultType result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // .srecon.Jitter jitter = 2;
  if (this->has_jitter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->jitter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:srecon.Behaviour)
}

::google::protobuf::uint8* Behaviour::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:srecon.Behaviour)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .srecon.ResultType result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // .srecon.Jitter jitter = 2;
  if (this->has_jitter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->jitter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srecon.Behaviour)
  return target;
}

size_t Behaviour::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srecon.Behaviour)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .srecon.Jitter jitter = 2;
  if (this->has_jitter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->jitter_);
  }

  // .srecon.ResultType result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Behaviour::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srecon.Behaviour)
  GOOGLE_DCHECK_NE(&from, this);
  const Behaviour* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Behaviour>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srecon.Behaviour)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srecon.Behaviour)
    MergeFrom(*source);
  }
}

void Behaviour::MergeFrom(const Behaviour& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srecon.Behaviour)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_jitter()) {
    mutable_jitter()->::srecon::Jitter::MergeFrom(from.jitter());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void Behaviour::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srecon.Behaviour)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Behaviour::CopyFrom(const Behaviour& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srecon.Behaviour)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Behaviour::IsInitialized() const {
  return true;
}

void Behaviour::Swap(Behaviour* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Behaviour::InternalSwap(Behaviour* other) {
  using std::swap;
  swap(jitter_, other->jitter_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Behaviour::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Behaviour

// .srecon.ResultType result = 1;
void Behaviour::clear_result() {
  result_ = 0;
}
::srecon::ResultType Behaviour::result() const {
  // @@protoc_insertion_point(field_get:srecon.Behaviour.result)
  return static_cast< ::srecon::ResultType >(result_);
}
void Behaviour::set_result(::srecon::ResultType value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:srecon.Behaviour.result)
}

// .srecon.Jitter jitter = 2;
bool Behaviour::has_jitter() const {
  return this != internal_default_instance() && jitter_ != NULL;
}
void Behaviour::clear_jitter() {
  if (GetArenaNoVirtual() == NULL && jitter_ != NULL) delete jitter_;
  jitter_ = NULL;
}
const ::srecon::Jitter& Behaviour::jitter() const {
  const ::srecon::Jitter* p = jitter_;
  // @@protoc_insertion_point(field_get:srecon.Behaviour.jitter)
  return p != NULL ? *p : *reinterpret_cast<const ::srecon::Jitter*>(
      &::srecon::_Jitter_default_instance_);
}
::srecon::Jitter* Behaviour::mutable_jitter() {
  
  if (jitter_ == NULL) {
    jitter_ = new ::srecon::Jitter;
  }
  // @@protoc_insertion_point(field_mutable:srecon.Behaviour.jitter)
  return jitter_;
}
::srecon::Jitter* Behaviour::release_jitter() {
  // @@protoc_insertion_point(field_release:srecon.Behaviour.jitter)
  
  ::srecon::Jitter* temp = jitter_;
  jitter_ = NULL;
  return temp;
}
void Behaviour::set_allocated_jitter(::srecon::Jitter* jitter) {
  delete jitter_;
  jitter_ = jitter;
  if (jitter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:srecon.Behaviour.jitter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BehaviourDefinition::kUnaryFieldNumber;
const int BehaviourDefinition::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviourDefinition::BehaviourDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_control_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:srecon.BehaviourDefinition)
}
BehaviourDefinition::BehaviourDefinition(const BehaviourDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unary_(from.unary_),
      stream_(from.stream_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:srecon.BehaviourDefinition)
}

void BehaviourDefinition::SharedCtor() {
  _cached_size_ = 0;
}

BehaviourDefinition::~BehaviourDefinition() {
  // @@protoc_insertion_point(destructor:srecon.BehaviourDefinition)
  SharedDtor();
}

void BehaviourDefinition::SharedDtor() {
}

void BehaviourDefinition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviourDefinition::descriptor() {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviourDefinition& BehaviourDefinition::default_instance() {
  protobuf_control_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviourDefinition* BehaviourDefinition::New(::google::protobuf::Arena* arena) const {
  BehaviourDefinition* n = new BehaviourDefinition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviourDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:srecon.BehaviourDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unary_.Clear();
  stream_.Clear();
  _internal_metadata_.Clear();
}

bool BehaviourDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:srecon.BehaviourDefinition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .srecon.Behaviour unary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .srecon.Behaviour stream = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:srecon.BehaviourDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:srecon.BehaviourDefinition)
  return false;
#undef DO_
}

void BehaviourDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:srecon.BehaviourDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .srecon.Behaviour unary = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unary_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->unary(static_cast<int>(i)), output);
  }

  // repeated .srecon.Behaviour stream = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stream_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stream(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:srecon.BehaviourDefinition)
}

::google::protobuf::uint8* BehaviourDefinition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:srecon.BehaviourDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .srecon.Behaviour unary = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unary_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->unary(static_cast<int>(i)), deterministic, target);
  }

  // repeated .srecon.Behaviour stream = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stream_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->stream(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srecon.BehaviourDefinition)
  return target;
}

size_t BehaviourDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srecon.BehaviourDefinition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .srecon.Behaviour unary = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->unary_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unary(static_cast<int>(i)));
    }
  }

  // repeated .srecon.Behaviour stream = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stream_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stream(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviourDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srecon.BehaviourDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviourDefinition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviourDefinition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srecon.BehaviourDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srecon.BehaviourDefinition)
    MergeFrom(*source);
  }
}

void BehaviourDefinition::MergeFrom(const BehaviourDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srecon.BehaviourDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unary_.MergeFrom(from.unary_);
  stream_.MergeFrom(from.stream_);
}

void BehaviourDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srecon.BehaviourDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviourDefinition::CopyFrom(const BehaviourDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srecon.BehaviourDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviourDefinition::IsInitialized() const {
  return true;
}

void BehaviourDefinition::Swap(BehaviourDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviourDefinition::InternalSwap(BehaviourDefinition* other) {
  using std::swap;
  unary_.InternalSwap(&other->unary_);
  stream_.InternalSwap(&other->stream_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviourDefinition::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviourDefinition

// repeated .srecon.Behaviour unary = 1;
int BehaviourDefinition::unary_size() const {
  return unary_.size();
}
void BehaviourDefinition::clear_unary() {
  unary_.Clear();
}
const ::srecon::Behaviour& BehaviourDefinition::unary(int index) const {
  // @@protoc_insertion_point(field_get:srecon.BehaviourDefinition.unary)
  return unary_.Get(index);
}
::srecon::Behaviour* BehaviourDefinition::mutable_unary(int index) {
  // @@protoc_insertion_point(field_mutable:srecon.BehaviourDefinition.unary)
  return unary_.Mutable(index);
}
::srecon::Behaviour* BehaviourDefinition::add_unary() {
  // @@protoc_insertion_point(field_add:srecon.BehaviourDefinition.unary)
  return unary_.Add();
}
::google::protobuf::RepeatedPtrField< ::srecon::Behaviour >*
BehaviourDefinition::mutable_unary() {
  // @@protoc_insertion_point(field_mutable_list:srecon.BehaviourDefinition.unary)
  return &unary_;
}
const ::google::protobuf::RepeatedPtrField< ::srecon::Behaviour >&
BehaviourDefinition::unary() const {
  // @@protoc_insertion_point(field_list:srecon.BehaviourDefinition.unary)
  return unary_;
}

// repeated .srecon.Behaviour stream = 2;
int BehaviourDefinition::stream_size() const {
  return stream_.size();
}
void BehaviourDefinition::clear_stream() {
  stream_.Clear();
}
const ::srecon::Behaviour& BehaviourDefinition::stream(int index) const {
  // @@protoc_insertion_point(field_get:srecon.BehaviourDefinition.stream)
  return stream_.Get(index);
}
::srecon::Behaviour* BehaviourDefinition::mutable_stream(int index) {
  // @@protoc_insertion_point(field_mutable:srecon.BehaviourDefinition.stream)
  return stream_.Mutable(index);
}
::srecon::Behaviour* BehaviourDefinition::add_stream() {
  // @@protoc_insertion_point(field_add:srecon.BehaviourDefinition.stream)
  return stream_.Add();
}
::google::protobuf::RepeatedPtrField< ::srecon::Behaviour >*
BehaviourDefinition::mutable_stream() {
  // @@protoc_insertion_point(field_mutable_list:srecon.BehaviourDefinition.stream)
  return &stream_;
}
const ::google::protobuf::RepeatedPtrField< ::srecon::Behaviour >&
BehaviourDefinition::stream() const {
  // @@protoc_insertion_point(field_list:srecon.BehaviourDefinition.stream)
  return stream_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviourReply::BehaviourReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_control_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:srecon.BehaviourReply)
}
BehaviourReply::BehaviourReply(const BehaviourReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:srecon.BehaviourReply)
}

void BehaviourReply::SharedCtor() {
  _cached_size_ = 0;
}

BehaviourReply::~BehaviourReply() {
  // @@protoc_insertion_point(destructor:srecon.BehaviourReply)
  SharedDtor();
}

void BehaviourReply::SharedDtor() {
}

void BehaviourReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviourReply::descriptor() {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviourReply& BehaviourReply::default_instance() {
  protobuf_control_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviourReply* BehaviourReply::New(::google::protobuf::Arena* arena) const {
  BehaviourReply* n = new BehaviourReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviourReply::Clear() {
// @@protoc_insertion_point(message_clear_start:srecon.BehaviourReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool BehaviourReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:srecon.BehaviourReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:srecon.BehaviourReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:srecon.BehaviourReply)
  return false;
#undef DO_
}

void BehaviourReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:srecon.BehaviourReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:srecon.BehaviourReply)
}

::google::protobuf::uint8* BehaviourReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:srecon.BehaviourReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srecon.BehaviourReply)
  return target;
}

size_t BehaviourReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srecon.BehaviourReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviourReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srecon.BehaviourReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviourReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviourReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srecon.BehaviourReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srecon.BehaviourReply)
    MergeFrom(*source);
  }
}

void BehaviourReply::MergeFrom(const BehaviourReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srecon.BehaviourReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BehaviourReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srecon.BehaviourReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviourReply::CopyFrom(const BehaviourReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srecon.BehaviourReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviourReply::IsInitialized() const {
  return true;
}

void BehaviourReply::Swap(BehaviourReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviourReply::InternalSwap(BehaviourReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviourReply::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviourReply

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace srecon

// @@protoc_insertion_point(global_scope)
