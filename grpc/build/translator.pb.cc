// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: translator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "translator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace srecon {
class TranslationRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TranslationRequest>
     _instance;
} _TranslationRequest_default_instance_;
class TranslationReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TranslationReply>
     _instance;
} _TranslationReply_default_instance_;
class AllTranslationsRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AllTranslationsRequest>
     _instance;
} _AllTranslationsRequest_default_instance_;
class AllTranslationsReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AllTranslationsReply>
     _instance;
} _AllTranslationsReply_default_instance_;

namespace protobuf_translator_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationRequest, locale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationReply, translation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTranslationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTranslationsRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTranslationsRequest, locales_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTranslationsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTranslationsReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTranslationsReply, locale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTranslationsReply, translation_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(TranslationRequest)},
  { 7, -1, sizeof(TranslationReply)},
  { 13, -1, sizeof(AllTranslationsRequest)},
  { 20, -1, sizeof(AllTranslationsReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TranslationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TranslationReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllTranslationsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllTranslationsReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "translator.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TranslationRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TranslationRequest_default_instance_);_TranslationReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TranslationReply_default_instance_);_AllTranslationsRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AllTranslationsRequest_default_instance_);_AllTranslationsReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AllTranslationsReply_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020translator.proto\022\006srecon\"5\n\022Translatio"
      "nRequest\022\017\n\007message\030\001 \001(\t\022\016\n\006locale\030\002 \001("
      "\t\"\'\n\020TranslationReply\022\023\n\013translation\030\001 \001"
      "(\t\":\n\026AllTranslationsRequest\022\017\n\007message\030"
      "\001 \001(\t\022\017\n\007locales\030\002 \003(\t\"L\n\024AllTranslation"
      "sReply\022\017\n\007message\030\001 \001(\t\022\016\n\006locale\030\002 \001(\t\022"
      "\023\n\013translation\030\003 \001(\t2\246\001\n\nTranslator\022C\n\tT"
      "ranslate\022\032.srecon.TranslationRequest\032\030.s"
      "recon.TranslationReply\"\000\022S\n\017AllTranslati"
      "ons\022\036.srecon.AllTranslationsRequest\032\034.sr"
      "econ.AllTranslationsReply\"\0000\001B\023B\017Transla"
      "torProtoP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 458);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "translator.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_translator_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranslationRequest::kMessageFieldNumber;
const int TranslationRequest::kLocaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranslationRequest::TranslationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_translator_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:srecon.TranslationRequest)
}
TranslationRequest::TranslationRequest(const TranslationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locale().size() > 0) {
    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  // @@protoc_insertion_point(copy_constructor:srecon.TranslationRequest)
}

void TranslationRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TranslationRequest::~TranslationRequest() {
  // @@protoc_insertion_point(destructor:srecon.TranslationRequest)
  SharedDtor();
}

void TranslationRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TranslationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TranslationRequest::descriptor() {
  protobuf_translator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_translator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TranslationRequest& TranslationRequest::default_instance() {
  protobuf_translator_2eproto::InitDefaults();
  return *internal_default_instance();
}

TranslationRequest* TranslationRequest::New(::google::protobuf::Arena* arena) const {
  TranslationRequest* n = new TranslationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TranslationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:srecon.TranslationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TranslationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:srecon.TranslationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "srecon.TranslationRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string locale = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), static_cast<int>(this->locale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "srecon.TranslationRequest.locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:srecon.TranslationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:srecon.TranslationRequest)
  return false;
#undef DO_
}

void TranslationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:srecon.TranslationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.TranslationRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.TranslationRequest.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->locale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:srecon.TranslationRequest)
}

::google::protobuf::uint8* TranslationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:srecon.TranslationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.TranslationRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.TranslationRequest.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->locale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srecon.TranslationRequest)
  return target;
}

size_t TranslationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srecon.TranslationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TranslationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srecon.TranslationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TranslationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TranslationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srecon.TranslationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srecon.TranslationRequest)
    MergeFrom(*source);
  }
}

void TranslationRequest::MergeFrom(const TranslationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srecon.TranslationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.locale().size() > 0) {

    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
}

void TranslationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srecon.TranslationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TranslationRequest::CopyFrom(const TranslationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srecon.TranslationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationRequest::IsInitialized() const {
  return true;
}

void TranslationRequest::Swap(TranslationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranslationRequest::InternalSwap(TranslationRequest* other) {
  using std::swap;
  message_.Swap(&other->message_);
  locale_.Swap(&other->locale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TranslationRequest::GetMetadata() const {
  protobuf_translator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_translator_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TranslationRequest

// string message = 1;
void TranslationRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TranslationRequest::message() const {
  // @@protoc_insertion_point(field_get:srecon.TranslationRequest.message)
  return message_.GetNoArena();
}
void TranslationRequest::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:srecon.TranslationRequest.message)
}
#if LANG_CXX11
void TranslationRequest::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:srecon.TranslationRequest.message)
}
#endif
void TranslationRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:srecon.TranslationRequest.message)
}
void TranslationRequest::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:srecon.TranslationRequest.message)
}
::std::string* TranslationRequest::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:srecon.TranslationRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslationRequest::release_message() {
  // @@protoc_insertion_point(field_release:srecon.TranslationRequest.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslationRequest::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:srecon.TranslationRequest.message)
}

// string locale = 2;
void TranslationRequest::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TranslationRequest::locale() const {
  // @@protoc_insertion_point(field_get:srecon.TranslationRequest.locale)
  return locale_.GetNoArena();
}
void TranslationRequest::set_locale(const ::std::string& value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:srecon.TranslationRequest.locale)
}
#if LANG_CXX11
void TranslationRequest::set_locale(::std::string&& value) {
  
  locale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:srecon.TranslationRequest.locale)
}
#endif
void TranslationRequest::set_locale(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:srecon.TranslationRequest.locale)
}
void TranslationRequest::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:srecon.TranslationRequest.locale)
}
::std::string* TranslationRequest::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:srecon.TranslationRequest.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslationRequest::release_locale() {
  // @@protoc_insertion_point(field_release:srecon.TranslationRequest.locale)
  
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslationRequest::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:srecon.TranslationRequest.locale)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranslationReply::kTranslationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranslationReply::TranslationReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_translator_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:srecon.TranslationReply)
}
TranslationReply::TranslationReply(const TranslationReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  translation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.translation().size() > 0) {
    translation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.translation_);
  }
  // @@protoc_insertion_point(copy_constructor:srecon.TranslationReply)
}

void TranslationReply::SharedCtor() {
  translation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TranslationReply::~TranslationReply() {
  // @@protoc_insertion_point(destructor:srecon.TranslationReply)
  SharedDtor();
}

void TranslationReply::SharedDtor() {
  translation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TranslationReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TranslationReply::descriptor() {
  protobuf_translator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_translator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TranslationReply& TranslationReply::default_instance() {
  protobuf_translator_2eproto::InitDefaults();
  return *internal_default_instance();
}

TranslationReply* TranslationReply::New(::google::protobuf::Arena* arena) const {
  TranslationReply* n = new TranslationReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TranslationReply::Clear() {
// @@protoc_insertion_point(message_clear_start:srecon.TranslationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  translation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TranslationReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:srecon.TranslationReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string translation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_translation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->translation().data(), static_cast<int>(this->translation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "srecon.TranslationReply.translation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:srecon.TranslationReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:srecon.TranslationReply)
  return false;
#undef DO_
}

void TranslationReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:srecon.TranslationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string translation = 1;
  if (this->translation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->translation().data(), static_cast<int>(this->translation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.TranslationReply.translation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->translation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:srecon.TranslationReply)
}

::google::protobuf::uint8* TranslationReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:srecon.TranslationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string translation = 1;
  if (this->translation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->translation().data(), static_cast<int>(this->translation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.TranslationReply.translation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->translation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srecon.TranslationReply)
  return target;
}

size_t TranslationReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srecon.TranslationReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string translation = 1;
  if (this->translation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->translation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TranslationReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srecon.TranslationReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TranslationReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TranslationReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srecon.TranslationReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srecon.TranslationReply)
    MergeFrom(*source);
  }
}

void TranslationReply::MergeFrom(const TranslationReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srecon.TranslationReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.translation().size() > 0) {

    translation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.translation_);
  }
}

void TranslationReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srecon.TranslationReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TranslationReply::CopyFrom(const TranslationReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srecon.TranslationReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranslationReply::IsInitialized() const {
  return true;
}

void TranslationReply::Swap(TranslationReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranslationReply::InternalSwap(TranslationReply* other) {
  using std::swap;
  translation_.Swap(&other->translation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TranslationReply::GetMetadata() const {
  protobuf_translator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_translator_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TranslationReply

// string translation = 1;
void TranslationReply::clear_translation() {
  translation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TranslationReply::translation() const {
  // @@protoc_insertion_point(field_get:srecon.TranslationReply.translation)
  return translation_.GetNoArena();
}
void TranslationReply::set_translation(const ::std::string& value) {
  
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:srecon.TranslationReply.translation)
}
#if LANG_CXX11
void TranslationReply::set_translation(::std::string&& value) {
  
  translation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:srecon.TranslationReply.translation)
}
#endif
void TranslationReply::set_translation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:srecon.TranslationReply.translation)
}
void TranslationReply::set_translation(const char* value, size_t size) {
  
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:srecon.TranslationReply.translation)
}
::std::string* TranslationReply::mutable_translation() {
  
  // @@protoc_insertion_point(field_mutable:srecon.TranslationReply.translation)
  return translation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslationReply::release_translation() {
  // @@protoc_insertion_point(field_release:srecon.TranslationReply.translation)
  
  return translation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslationReply::set_allocated_translation(::std::string* translation) {
  if (translation != NULL) {
    
  } else {
    
  }
  translation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), translation);
  // @@protoc_insertion_point(field_set_allocated:srecon.TranslationReply.translation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllTranslationsRequest::kMessageFieldNumber;
const int AllTranslationsRequest::kLocalesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllTranslationsRequest::AllTranslationsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_translator_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:srecon.AllTranslationsRequest)
}
AllTranslationsRequest::AllTranslationsRequest(const AllTranslationsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      locales_(from.locales_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:srecon.AllTranslationsRequest)
}

void AllTranslationsRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AllTranslationsRequest::~AllTranslationsRequest() {
  // @@protoc_insertion_point(destructor:srecon.AllTranslationsRequest)
  SharedDtor();
}

void AllTranslationsRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllTranslationsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllTranslationsRequest::descriptor() {
  protobuf_translator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_translator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllTranslationsRequest& AllTranslationsRequest::default_instance() {
  protobuf_translator_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllTranslationsRequest* AllTranslationsRequest::New(::google::protobuf::Arena* arena) const {
  AllTranslationsRequest* n = new AllTranslationsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllTranslationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:srecon.AllTranslationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locales_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AllTranslationsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:srecon.AllTranslationsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "srecon.AllTranslationsRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string locales = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_locales()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locales(this->locales_size() - 1).data(),
            static_cast<int>(this->locales(this->locales_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "srecon.AllTranslationsRequest.locales"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:srecon.AllTranslationsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:srecon.AllTranslationsRequest)
  return false;
#undef DO_
}

void AllTranslationsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:srecon.AllTranslationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // repeated string locales = 2;
  for (int i = 0, n = this->locales_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locales(i).data(), static_cast<int>(this->locales(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsRequest.locales");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->locales(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:srecon.AllTranslationsRequest)
}

::google::protobuf::uint8* AllTranslationsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:srecon.AllTranslationsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // repeated string locales = 2;
  for (int i = 0, n = this->locales_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locales(i).data(), static_cast<int>(this->locales(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsRequest.locales");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->locales(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srecon.AllTranslationsRequest)
  return target;
}

size_t AllTranslationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srecon.AllTranslationsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string locales = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->locales_size());
  for (int i = 0, n = this->locales_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->locales(i));
  }

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllTranslationsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srecon.AllTranslationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AllTranslationsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllTranslationsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srecon.AllTranslationsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srecon.AllTranslationsRequest)
    MergeFrom(*source);
  }
}

void AllTranslationsRequest::MergeFrom(const AllTranslationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srecon.AllTranslationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locales_.MergeFrom(from.locales_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void AllTranslationsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srecon.AllTranslationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllTranslationsRequest::CopyFrom(const AllTranslationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srecon.AllTranslationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllTranslationsRequest::IsInitialized() const {
  return true;
}

void AllTranslationsRequest::Swap(AllTranslationsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllTranslationsRequest::InternalSwap(AllTranslationsRequest* other) {
  using std::swap;
  locales_.InternalSwap(&other->locales_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllTranslationsRequest::GetMetadata() const {
  protobuf_translator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_translator_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllTranslationsRequest

// string message = 1;
void AllTranslationsRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllTranslationsRequest::message() const {
  // @@protoc_insertion_point(field_get:srecon.AllTranslationsRequest.message)
  return message_.GetNoArena();
}
void AllTranslationsRequest::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:srecon.AllTranslationsRequest.message)
}
#if LANG_CXX11
void AllTranslationsRequest::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:srecon.AllTranslationsRequest.message)
}
#endif
void AllTranslationsRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:srecon.AllTranslationsRequest.message)
}
void AllTranslationsRequest::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:srecon.AllTranslationsRequest.message)
}
::std::string* AllTranslationsRequest::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:srecon.AllTranslationsRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllTranslationsRequest::release_message() {
  // @@protoc_insertion_point(field_release:srecon.AllTranslationsRequest.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllTranslationsRequest::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:srecon.AllTranslationsRequest.message)
}

// repeated string locales = 2;
int AllTranslationsRequest::locales_size() const {
  return locales_.size();
}
void AllTranslationsRequest::clear_locales() {
  locales_.Clear();
}
const ::std::string& AllTranslationsRequest::locales(int index) const {
  // @@protoc_insertion_point(field_get:srecon.AllTranslationsRequest.locales)
  return locales_.Get(index);
}
::std::string* AllTranslationsRequest::mutable_locales(int index) {
  // @@protoc_insertion_point(field_mutable:srecon.AllTranslationsRequest.locales)
  return locales_.Mutable(index);
}
void AllTranslationsRequest::set_locales(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:srecon.AllTranslationsRequest.locales)
  locales_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AllTranslationsRequest::set_locales(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:srecon.AllTranslationsRequest.locales)
  locales_.Mutable(index)->assign(std::move(value));
}
#endif
void AllTranslationsRequest::set_locales(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  locales_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:srecon.AllTranslationsRequest.locales)
}
void AllTranslationsRequest::set_locales(int index, const char* value, size_t size) {
  locales_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:srecon.AllTranslationsRequest.locales)
}
::std::string* AllTranslationsRequest::add_locales() {
  // @@protoc_insertion_point(field_add_mutable:srecon.AllTranslationsRequest.locales)
  return locales_.Add();
}
void AllTranslationsRequest::add_locales(const ::std::string& value) {
  locales_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:srecon.AllTranslationsRequest.locales)
}
#if LANG_CXX11
void AllTranslationsRequest::add_locales(::std::string&& value) {
  locales_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:srecon.AllTranslationsRequest.locales)
}
#endif
void AllTranslationsRequest::add_locales(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  locales_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:srecon.AllTranslationsRequest.locales)
}
void AllTranslationsRequest::add_locales(const char* value, size_t size) {
  locales_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:srecon.AllTranslationsRequest.locales)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllTranslationsRequest::locales() const {
  // @@protoc_insertion_point(field_list:srecon.AllTranslationsRequest.locales)
  return locales_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AllTranslationsRequest::mutable_locales() {
  // @@protoc_insertion_point(field_mutable_list:srecon.AllTranslationsRequest.locales)
  return &locales_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllTranslationsReply::kMessageFieldNumber;
const int AllTranslationsReply::kLocaleFieldNumber;
const int AllTranslationsReply::kTranslationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllTranslationsReply::AllTranslationsReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_translator_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:srecon.AllTranslationsReply)
}
AllTranslationsReply::AllTranslationsReply(const AllTranslationsReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locale().size() > 0) {
    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  translation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.translation().size() > 0) {
    translation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.translation_);
  }
  // @@protoc_insertion_point(copy_constructor:srecon.AllTranslationsReply)
}

void AllTranslationsReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  translation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AllTranslationsReply::~AllTranslationsReply() {
  // @@protoc_insertion_point(destructor:srecon.AllTranslationsReply)
  SharedDtor();
}

void AllTranslationsReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  translation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllTranslationsReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllTranslationsReply::descriptor() {
  protobuf_translator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_translator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllTranslationsReply& AllTranslationsReply::default_instance() {
  protobuf_translator_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllTranslationsReply* AllTranslationsReply::New(::google::protobuf::Arena* arena) const {
  AllTranslationsReply* n = new AllTranslationsReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllTranslationsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:srecon.AllTranslationsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  translation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AllTranslationsReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:srecon.AllTranslationsReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "srecon.AllTranslationsReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string locale = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), static_cast<int>(this->locale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "srecon.AllTranslationsReply.locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string translation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_translation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->translation().data(), static_cast<int>(this->translation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "srecon.AllTranslationsReply.translation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:srecon.AllTranslationsReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:srecon.AllTranslationsReply)
  return false;
#undef DO_
}

void AllTranslationsReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:srecon.AllTranslationsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsReply.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->locale(), output);
  }

  // string translation = 3;
  if (this->translation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->translation().data(), static_cast<int>(this->translation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsReply.translation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->translation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:srecon.AllTranslationsReply)
}

::google::protobuf::uint8* AllTranslationsReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:srecon.AllTranslationsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsReply.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->locale(), target);
  }

  // string translation = 3;
  if (this->translation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->translation().data(), static_cast<int>(this->translation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "srecon.AllTranslationsReply.translation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->translation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srecon.AllTranslationsReply)
  return target;
}

size_t AllTranslationsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srecon.AllTranslationsReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string locale = 2;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  // string translation = 3;
  if (this->translation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->translation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllTranslationsReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srecon.AllTranslationsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AllTranslationsReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllTranslationsReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srecon.AllTranslationsReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srecon.AllTranslationsReply)
    MergeFrom(*source);
  }
}

void AllTranslationsReply::MergeFrom(const AllTranslationsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srecon.AllTranslationsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.locale().size() > 0) {

    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  if (from.translation().size() > 0) {

    translation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.translation_);
  }
}

void AllTranslationsReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srecon.AllTranslationsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllTranslationsReply::CopyFrom(const AllTranslationsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srecon.AllTranslationsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllTranslationsReply::IsInitialized() const {
  return true;
}

void AllTranslationsReply::Swap(AllTranslationsReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllTranslationsReply::InternalSwap(AllTranslationsReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  locale_.Swap(&other->locale_);
  translation_.Swap(&other->translation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllTranslationsReply::GetMetadata() const {
  protobuf_translator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_translator_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllTranslationsReply

// string message = 1;
void AllTranslationsReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllTranslationsReply::message() const {
  // @@protoc_insertion_point(field_get:srecon.AllTranslationsReply.message)
  return message_.GetNoArena();
}
void AllTranslationsReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:srecon.AllTranslationsReply.message)
}
#if LANG_CXX11
void AllTranslationsReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:srecon.AllTranslationsReply.message)
}
#endif
void AllTranslationsReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:srecon.AllTranslationsReply.message)
}
void AllTranslationsReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:srecon.AllTranslationsReply.message)
}
::std::string* AllTranslationsReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:srecon.AllTranslationsReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllTranslationsReply::release_message() {
  // @@protoc_insertion_point(field_release:srecon.AllTranslationsReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllTranslationsReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:srecon.AllTranslationsReply.message)
}

// string locale = 2;
void AllTranslationsReply::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllTranslationsReply::locale() const {
  // @@protoc_insertion_point(field_get:srecon.AllTranslationsReply.locale)
  return locale_.GetNoArena();
}
void AllTranslationsReply::set_locale(const ::std::string& value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:srecon.AllTranslationsReply.locale)
}
#if LANG_CXX11
void AllTranslationsReply::set_locale(::std::string&& value) {
  
  locale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:srecon.AllTranslationsReply.locale)
}
#endif
void AllTranslationsReply::set_locale(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:srecon.AllTranslationsReply.locale)
}
void AllTranslationsReply::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:srecon.AllTranslationsReply.locale)
}
::std::string* AllTranslationsReply::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:srecon.AllTranslationsReply.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllTranslationsReply::release_locale() {
  // @@protoc_insertion_point(field_release:srecon.AllTranslationsReply.locale)
  
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllTranslationsReply::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:srecon.AllTranslationsReply.locale)
}

// string translation = 3;
void AllTranslationsReply::clear_translation() {
  translation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllTranslationsReply::translation() const {
  // @@protoc_insertion_point(field_get:srecon.AllTranslationsReply.translation)
  return translation_.GetNoArena();
}
void AllTranslationsReply::set_translation(const ::std::string& value) {
  
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:srecon.AllTranslationsReply.translation)
}
#if LANG_CXX11
void AllTranslationsReply::set_translation(::std::string&& value) {
  
  translation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:srecon.AllTranslationsReply.translation)
}
#endif
void AllTranslationsReply::set_translation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:srecon.AllTranslationsReply.translation)
}
void AllTranslationsReply::set_translation(const char* value, size_t size) {
  
  translation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:srecon.AllTranslationsReply.translation)
}
::std::string* AllTranslationsReply::mutable_translation() {
  
  // @@protoc_insertion_point(field_mutable:srecon.AllTranslationsReply.translation)
  return translation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllTranslationsReply::release_translation() {
  // @@protoc_insertion_point(field_release:srecon.AllTranslationsReply.translation)
  
  return translation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllTranslationsReply::set_allocated_translation(::std::string* translation) {
  if (translation != NULL) {
    
  } else {
    
  }
  translation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), translation);
  // @@protoc_insertion_point(field_set_allocated:srecon.AllTranslationsReply.translation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace srecon

// @@protoc_insertion_point(global_scope)
