# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: translator.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='translator.proto',
  package='srecon',
  syntax='proto3',
  serialized_pb=_b('\n\x10translator.proto\x12\x06srecon\"5\n\x12TranslationRequest\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0e\n\x06locale\x18\x02 \x01(\t\"\'\n\x10TranslationReply\x12\x13\n\x0btranslation\x18\x01 \x01(\t\":\n\x16\x41llTranslationsRequest\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0f\n\x07locales\x18\x02 \x03(\t\"L\n\x14\x41llTranslationsReply\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0e\n\x06locale\x18\x02 \x01(\t\x12\x13\n\x0btranslation\x18\x03 \x01(\t2\xa6\x01\n\nTranslator\x12\x43\n\tTranslate\x12\x1a.srecon.TranslationRequest\x1a\x18.srecon.TranslationReply\"\x00\x12S\n\x0f\x41llTranslations\x12\x1e.srecon.AllTranslationsRequest\x1a\x1c.srecon.AllTranslationsReply\"\x00\x30\x01\x42\x13\x42\x0fTranslatorProtoP\x01\x62\x06proto3')
)




_TRANSLATIONREQUEST = _descriptor.Descriptor(
  name='TranslationRequest',
  full_name='srecon.TranslationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='srecon.TranslationRequest.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='locale', full_name='srecon.TranslationRequest.locale', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=81,
)


_TRANSLATIONREPLY = _descriptor.Descriptor(
  name='TranslationReply',
  full_name='srecon.TranslationReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='translation', full_name='srecon.TranslationReply.translation', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=83,
  serialized_end=122,
)


_ALLTRANSLATIONSREQUEST = _descriptor.Descriptor(
  name='AllTranslationsRequest',
  full_name='srecon.AllTranslationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='srecon.AllTranslationsRequest.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='locales', full_name='srecon.AllTranslationsRequest.locales', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=124,
  serialized_end=182,
)


_ALLTRANSLATIONSREPLY = _descriptor.Descriptor(
  name='AllTranslationsReply',
  full_name='srecon.AllTranslationsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='srecon.AllTranslationsReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='locale', full_name='srecon.AllTranslationsReply.locale', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='translation', full_name='srecon.AllTranslationsReply.translation', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=184,
  serialized_end=260,
)

DESCRIPTOR.message_types_by_name['TranslationRequest'] = _TRANSLATIONREQUEST
DESCRIPTOR.message_types_by_name['TranslationReply'] = _TRANSLATIONREPLY
DESCRIPTOR.message_types_by_name['AllTranslationsRequest'] = _ALLTRANSLATIONSREQUEST
DESCRIPTOR.message_types_by_name['AllTranslationsReply'] = _ALLTRANSLATIONSREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TranslationRequest = _reflection.GeneratedProtocolMessageType('TranslationRequest', (_message.Message,), dict(
  DESCRIPTOR = _TRANSLATIONREQUEST,
  __module__ = 'translator_pb2'
  # @@protoc_insertion_point(class_scope:srecon.TranslationRequest)
  ))
_sym_db.RegisterMessage(TranslationRequest)

TranslationReply = _reflection.GeneratedProtocolMessageType('TranslationReply', (_message.Message,), dict(
  DESCRIPTOR = _TRANSLATIONREPLY,
  __module__ = 'translator_pb2'
  # @@protoc_insertion_point(class_scope:srecon.TranslationReply)
  ))
_sym_db.RegisterMessage(TranslationReply)

AllTranslationsRequest = _reflection.GeneratedProtocolMessageType('AllTranslationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALLTRANSLATIONSREQUEST,
  __module__ = 'translator_pb2'
  # @@protoc_insertion_point(class_scope:srecon.AllTranslationsRequest)
  ))
_sym_db.RegisterMessage(AllTranslationsRequest)

AllTranslationsReply = _reflection.GeneratedProtocolMessageType('AllTranslationsReply', (_message.Message,), dict(
  DESCRIPTOR = _ALLTRANSLATIONSREPLY,
  __module__ = 'translator_pb2'
  # @@protoc_insertion_point(class_scope:srecon.AllTranslationsReply)
  ))
_sym_db.RegisterMessage(AllTranslationsReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('B\017TranslatorProtoP\001'))

_TRANSLATOR = _descriptor.ServiceDescriptor(
  name='Translator',
  full_name='srecon.Translator',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=263,
  serialized_end=429,
  methods=[
  _descriptor.MethodDescriptor(
    name='Translate',
    full_name='srecon.Translator.Translate',
    index=0,
    containing_service=None,
    input_type=_TRANSLATIONREQUEST,
    output_type=_TRANSLATIONREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AllTranslations',
    full_name='srecon.Translator.AllTranslations',
    index=1,
    containing_service=None,
    input_type=_ALLTRANSLATIONSREQUEST,
    output_type=_ALLTRANSLATIONSREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TRANSLATOR)

DESCRIPTOR.services_by_name['Translator'] = _TRANSLATOR

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class TranslatorStub(object):
    """The Translation Service definition.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Translate = channel.unary_unary(
          '/srecon.Translator/Translate',
          request_serializer=TranslationRequest.SerializeToString,
          response_deserializer=TranslationReply.FromString,
          )
      self.AllTranslations = channel.unary_stream(
          '/srecon.Translator/AllTranslations',
          request_serializer=AllTranslationsRequest.SerializeToString,
          response_deserializer=AllTranslationsReply.FromString,
          )


  class TranslatorServicer(object):
    """The Translation Service definition.
    """

    def Translate(self, request, context):
      """Takes a message and the locale to translate it to.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AllTranslations(self, request, context):
      """Streaming service which takes messages and the locales to translate it to.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_TranslatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Translate': grpc.unary_unary_rpc_method_handler(
            servicer.Translate,
            request_deserializer=TranslationRequest.FromString,
            response_serializer=TranslationReply.SerializeToString,
        ),
        'AllTranslations': grpc.unary_stream_rpc_method_handler(
            servicer.AllTranslations,
            request_deserializer=AllTranslationsRequest.FromString,
            response_serializer=AllTranslationsReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'srecon.Translator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaTranslatorServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The Translation Service definition.
    """
    def Translate(self, request, context):
      """Takes a message and the locale to translate it to.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AllTranslations(self, request, context):
      """Streaming service which takes messages and the locales to translate it to.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaTranslatorStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The Translation Service definition.
    """
    def Translate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Takes a message and the locale to translate it to.
      """
      raise NotImplementedError()
    Translate.future = None
    def AllTranslations(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Streaming service which takes messages and the locales to translate it to.
      """
      raise NotImplementedError()


  def beta_create_Translator_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('srecon.Translator', 'AllTranslations'): AllTranslationsRequest.FromString,
      ('srecon.Translator', 'Translate'): TranslationRequest.FromString,
    }
    response_serializers = {
      ('srecon.Translator', 'AllTranslations'): AllTranslationsReply.SerializeToString,
      ('srecon.Translator', 'Translate'): TranslationReply.SerializeToString,
    }
    method_implementations = {
      ('srecon.Translator', 'AllTranslations'): face_utilities.unary_stream_inline(servicer.AllTranslations),
      ('srecon.Translator', 'Translate'): face_utilities.unary_unary_inline(servicer.Translate),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Translator_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('srecon.Translator', 'AllTranslations'): AllTranslationsRequest.SerializeToString,
      ('srecon.Translator', 'Translate'): TranslationRequest.SerializeToString,
    }
    response_deserializers = {
      ('srecon.Translator', 'AllTranslations'): AllTranslationsReply.FromString,
      ('srecon.Translator', 'Translate'): TranslationReply.FromString,
    }
    cardinalities = {
      'AllTranslations': cardinality.Cardinality.UNARY_STREAM,
      'Translate': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'srecon.Translator', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
